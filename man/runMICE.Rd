% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MICE_functions.R
\name{runMICE}
\alias{runMICE}
\title{Run simulations}
\usage{
runMICE(Params, inputdir, scenario = "base", nYears = 100, nSteps = 4)
}
\arguments{
\item{params}{A data frame of parameters}
}
\value{
A list with three components: $input, $data, and $plots.  The $input
  list contains the simulationParams object that was used to do the
  simulations.  The $data and $plots sub-lists both have named components for
  each species, so for example the plots for Anchovy can be accessed as
  <result>$plots$Anchovy, or the data frame with the numerical results for
  Anchovy can be accessed with <result>$data$Anchovy.
}
\description{
This function drives the model.  It creates and initializes objects by
reading two files (input_params.csv and diet_prefs.csv) into data frames,
replaces the "params" data frame if an alternative is passed in by the user,
and then steps through years and intra-year timesteps, calculating population
numbers-at-age, recruits, catch, etc. for each species. Species interactions
are possible because the calculations for each species are done at least once
per year.  It returns a list of data and plots for each species. Note: the order of
some operations matters. This function must initialize the simulationParams
object before Species objects; do prey calculations before predators;
calculate sardine numbers before anchovy (because anchovy reproduction
depends on sardine numbers); update population numbers before recruitment and
catch (because catch and recruitment may depend on population size).
}
\examples{
\dontrun{
 result<-simulate() #uses default input files

 #Instead of using the default, modify some values in the parameter object
 my_params<-new("simulationParams") #create a new simulationParams object
 my_params<-set_simParam(my_params) #initialize the object with data from stored files
 p<-my_params@params #Get the input parameter data frame
 p[p$species=="Sardine",1:7] #Look at the parameters for one species.
 p$base[p$species=="Sardine" & p$parameter=="fished"]<-TRUE #Set fished to TRUE in the base scenario
 my_params@params<-p #put the changed value back into the simulationParams object.

 #Re-run the model with the changed values (Alternatively, one could re-make the .csv input files).
 result<-runMICE(my_params) #uses a modified simulationParams object

 #Look at the results
 result$plots$Pelican #plot pelican data (several plots are produced)
 anchovy.df<-result$data$Anchovy #save the Anchovy data to a data frame for further analysis
}
}

